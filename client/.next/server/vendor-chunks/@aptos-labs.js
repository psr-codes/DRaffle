"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@aptos-labs";
exports.ids = ["vendor-chunks/@aptos-labs"];
exports.modules = {

/***/ "(ssr)/./node_modules/@aptos-labs/aptos-client/dist/node/index.node.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@aptos-labs/aptos-client/dist/node/index.node.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ aptosClient)\n/* harmony export */ });\n/* harmony import */ var got__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! got */ \"(ssr)/./node_modules/got/dist/source/index.js\");\n// src/index.node.ts\n\n\n// src/cookieJar.ts\nvar CookieJar = class _CookieJar {\n  constructor(jar = /* @__PURE__ */ new Map()) {\n    this.jar = jar;\n  }\n  setCookie(url, cookieStr) {\n    var _a;\n    const key = url.origin.toLowerCase();\n    if (!this.jar.has(key)) {\n      this.jar.set(key, []);\n    }\n    const cookie = _CookieJar.parse(cookieStr);\n    this.jar.set(key, [...((_a = this.jar.get(key)) == null ? void 0 : _a.filter((c) => c.name !== cookie.name)) || [], cookie]);\n  }\n  getCookies(url) {\n    var _a;\n    const key = url.origin.toLowerCase();\n    if (!this.jar.get(key)) {\n      return [];\n    }\n    return ((_a = this.jar.get(key)) == null ? void 0 : _a.filter((cookie) => !cookie.expires || cookie.expires > /* @__PURE__ */ new Date())) || [];\n  }\n  static parse(str) {\n    if (typeof str !== \"string\") {\n      throw new Error(\"argument str must be a string\");\n    }\n    const parts = str.split(\";\").map((part) => part.trim());\n    let cookie;\n    if (parts.length > 0) {\n      const [name, value] = parts[0].split(\"=\");\n      if (!name || !value) {\n        throw new Error(\"Invalid cookie\");\n      }\n      cookie = {\n        name,\n        value\n      };\n    } else {\n      throw new Error(\"Invalid cookie\");\n    }\n    parts.slice(1).forEach((part) => {\n      const [name, value] = part.split(\"=\");\n      if (!name.trim()) {\n        throw new Error(\"Invalid cookie\");\n      }\n      const nameLow = name.toLowerCase();\n      const val = (value == null ? void 0 : value.charAt(0)) === \"'\" || (value == null ? void 0 : value.charAt(0)) === '\"' ? value == null ? void 0 : value.slice(1, -1) : value;\n      if (nameLow === \"expires\") {\n        cookie.expires = new Date(val);\n      }\n      if (nameLow === \"path\") {\n        cookie.path = val;\n      }\n      if (nameLow === \"samesite\") {\n        if (val !== \"Lax\" && val !== \"None\" && val !== \"Strict\") {\n          throw new Error(\"Invalid cookie SameSite value\");\n        }\n        cookie.sameSite = val;\n      }\n      if (nameLow === \"secure\") {\n        cookie.secure = true;\n      }\n    });\n    return cookie;\n  }\n};\n\n// src/index.node.ts\nvar cookieJar = new CookieJar();\nasync function aptosClient(requestOptions) {\n  const { params, method, url, headers, body } = requestOptions;\n  const request = {\n    http2: true,\n    searchParams: convertBigIntToString(params),\n    method,\n    url,\n    responseType: \"json\",\n    headers,\n    hooks: {\n      beforeRequest: [\n        (options) => {\n          const cookies = cookieJar.getCookies(new URL(options.url));\n          if ((cookies == null ? void 0 : cookies.length) > 0 && options.headers) {\n            options.headers.cookie = cookies.map((cookie) => `${cookie.name}=${cookie.value}`).join(\"; \");\n          }\n        }\n      ],\n      afterResponse: [\n        (response) => {\n          if (Array.isArray(response.headers[\"set-cookie\"])) {\n            response.headers[\"set-cookie\"].forEach((c) => {\n              cookieJar.setCookie(new URL(response.url), c);\n            });\n          }\n          return response;\n        }\n      ]\n    }\n  };\n  if (body) {\n    if (body instanceof Uint8Array) {\n      request.body = Buffer.from(body);\n    } else {\n      request.body = Buffer.from(JSON.stringify(body));\n    }\n  }\n  try {\n    const response = await got__WEBPACK_IMPORTED_MODULE_0__(request);\n    return parseResponse(response);\n  } catch (error) {\n    const gotError = error;\n    if (gotError.response) {\n      return parseResponse(gotError.response);\n    }\n    throw error;\n  }\n}\nfunction parseResponse(response) {\n  return {\n    status: response.statusCode,\n    statusText: response.statusMessage || \"\",\n    data: response.body,\n    config: response.request.options,\n    request: response.request,\n    response,\n    headers: response.headers\n  };\n}\nfunction convertBigIntToString(obj) {\n  const result = {};\n  if (!obj)\n    return result;\n  Object.entries(obj).forEach(([key, value]) => {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (typeof value === \"bigint\") {\n        result[key] = String(value);\n      } else {\n        result[key] = value;\n      }\n    }\n  });\n  return result;\n}\n\n//# sourceMappingURL=index.node.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwdG9zLWxhYnMvYXB0b3MtY2xpZW50L2Rpc3Qvbm9kZS9pbmRleC5ub2RlLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ3NCOztBQUV0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVSxxQ0FBcUM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLFlBQVksR0FBRyxhQUFhLFdBQVc7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsZ0NBQUc7QUFDOUI7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcUHJha2FzaCBTaW5naCBSYXdhdFxcRG9jdW1lbnRzXFxwcm9ncmFtbWVzXFxjb2RpbmdcXGhhY2thdGhvbnNcXDIwMjRcXGRhcHBhdGhvblxcY2xpZW50XFxub2RlX21vZHVsZXNcXEBhcHRvcy1sYWJzXFxhcHRvcy1jbGllbnRcXGRpc3RcXG5vZGVcXGluZGV4Lm5vZGUubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pbmRleC5ub2RlLnRzXG5pbXBvcnQgZ290IGZyb20gXCJnb3RcIjtcblxuLy8gc3JjL2Nvb2tpZUphci50c1xudmFyIENvb2tpZUphciA9IGNsYXNzIF9Db29raWVKYXIge1xuICBjb25zdHJ1Y3RvcihqYXIgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpKSB7XG4gICAgdGhpcy5qYXIgPSBqYXI7XG4gIH1cbiAgc2V0Q29va2llKHVybCwgY29va2llU3RyKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IGtleSA9IHVybC5vcmlnaW4udG9Mb3dlckNhc2UoKTtcbiAgICBpZiAoIXRoaXMuamFyLmhhcyhrZXkpKSB7XG4gICAgICB0aGlzLmphci5zZXQoa2V5LCBbXSk7XG4gICAgfVxuICAgIGNvbnN0IGNvb2tpZSA9IF9Db29raWVKYXIucGFyc2UoY29va2llU3RyKTtcbiAgICB0aGlzLmphci5zZXQoa2V5LCBbLi4uKChfYSA9IHRoaXMuamFyLmdldChrZXkpKSA9PSBudWxsID8gdm9pZCAwIDogX2EuZmlsdGVyKChjKSA9PiBjLm5hbWUgIT09IGNvb2tpZS5uYW1lKSkgfHwgW10sIGNvb2tpZV0pO1xuICB9XG4gIGdldENvb2tpZXModXJsKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IGtleSA9IHVybC5vcmlnaW4udG9Mb3dlckNhc2UoKTtcbiAgICBpZiAoIXRoaXMuamFyLmdldChrZXkpKSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIHJldHVybiAoKF9hID0gdGhpcy5qYXIuZ2V0KGtleSkpID09IG51bGwgPyB2b2lkIDAgOiBfYS5maWx0ZXIoKGNvb2tpZSkgPT4gIWNvb2tpZS5leHBpcmVzIHx8IGNvb2tpZS5leHBpcmVzID4gLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKCkpKSB8fCBbXTtcbiAgfVxuICBzdGF0aWMgcGFyc2Uoc3RyKSB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcImFyZ3VtZW50IHN0ciBtdXN0IGJlIGEgc3RyaW5nXCIpO1xuICAgIH1cbiAgICBjb25zdCBwYXJ0cyA9IHN0ci5zcGxpdChcIjtcIikubWFwKChwYXJ0KSA9PiBwYXJ0LnRyaW0oKSk7XG4gICAgbGV0IGNvb2tpZTtcbiAgICBpZiAocGFydHMubGVuZ3RoID4gMCkge1xuICAgICAgY29uc3QgW25hbWUsIHZhbHVlXSA9IHBhcnRzWzBdLnNwbGl0KFwiPVwiKTtcbiAgICAgIGlmICghbmFtZSB8fCAhdmFsdWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjb29raWVcIik7XG4gICAgICB9XG4gICAgICBjb29raWUgPSB7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIHZhbHVlXG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNvb2tpZVwiKTtcbiAgICB9XG4gICAgcGFydHMuc2xpY2UoMSkuZm9yRWFjaCgocGFydCkgPT4ge1xuICAgICAgY29uc3QgW25hbWUsIHZhbHVlXSA9IHBhcnQuc3BsaXQoXCI9XCIpO1xuICAgICAgaWYgKCFuYW1lLnRyaW0oKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNvb2tpZVwiKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG5hbWVMb3cgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICBjb25zdCB2YWwgPSAodmFsdWUgPT0gbnVsbCA/IHZvaWQgMCA6IHZhbHVlLmNoYXJBdCgwKSkgPT09IFwiJ1wiIHx8ICh2YWx1ZSA9PSBudWxsID8gdm9pZCAwIDogdmFsdWUuY2hhckF0KDApKSA9PT0gJ1wiJyA/IHZhbHVlID09IG51bGwgPyB2b2lkIDAgOiB2YWx1ZS5zbGljZSgxLCAtMSkgOiB2YWx1ZTtcbiAgICAgIGlmIChuYW1lTG93ID09PSBcImV4cGlyZXNcIikge1xuICAgICAgICBjb29raWUuZXhwaXJlcyA9IG5ldyBEYXRlKHZhbCk7XG4gICAgICB9XG4gICAgICBpZiAobmFtZUxvdyA9PT0gXCJwYXRoXCIpIHtcbiAgICAgICAgY29va2llLnBhdGggPSB2YWw7XG4gICAgICB9XG4gICAgICBpZiAobmFtZUxvdyA9PT0gXCJzYW1lc2l0ZVwiKSB7XG4gICAgICAgIGlmICh2YWwgIT09IFwiTGF4XCIgJiYgdmFsICE9PSBcIk5vbmVcIiAmJiB2YWwgIT09IFwiU3RyaWN0XCIpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNvb2tpZSBTYW1lU2l0ZSB2YWx1ZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb29raWUuc2FtZVNpdGUgPSB2YWw7XG4gICAgICB9XG4gICAgICBpZiAobmFtZUxvdyA9PT0gXCJzZWN1cmVcIikge1xuICAgICAgICBjb29raWUuc2VjdXJlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gY29va2llO1xuICB9XG59O1xuXG4vLyBzcmMvaW5kZXgubm9kZS50c1xudmFyIGNvb2tpZUphciA9IG5ldyBDb29raWVKYXIoKTtcbmFzeW5jIGZ1bmN0aW9uIGFwdG9zQ2xpZW50KHJlcXVlc3RPcHRpb25zKSB7XG4gIGNvbnN0IHsgcGFyYW1zLCBtZXRob2QsIHVybCwgaGVhZGVycywgYm9keSB9ID0gcmVxdWVzdE9wdGlvbnM7XG4gIGNvbnN0IHJlcXVlc3QgPSB7XG4gICAgaHR0cDI6IHRydWUsXG4gICAgc2VhcmNoUGFyYW1zOiBjb252ZXJ0QmlnSW50VG9TdHJpbmcocGFyYW1zKSxcbiAgICBtZXRob2QsXG4gICAgdXJsLFxuICAgIHJlc3BvbnNlVHlwZTogXCJqc29uXCIsXG4gICAgaGVhZGVycyxcbiAgICBob29rczoge1xuICAgICAgYmVmb3JlUmVxdWVzdDogW1xuICAgICAgICAob3B0aW9ucykgPT4ge1xuICAgICAgICAgIGNvbnN0IGNvb2tpZXMgPSBjb29raWVKYXIuZ2V0Q29va2llcyhuZXcgVVJMKG9wdGlvbnMudXJsKSk7XG4gICAgICAgICAgaWYgKChjb29raWVzID09IG51bGwgPyB2b2lkIDAgOiBjb29raWVzLmxlbmd0aCkgPiAwICYmIG9wdGlvbnMuaGVhZGVycykge1xuICAgICAgICAgICAgb3B0aW9ucy5oZWFkZXJzLmNvb2tpZSA9IGNvb2tpZXMubWFwKChjb29raWUpID0+IGAke2Nvb2tpZS5uYW1lfT0ke2Nvb2tpZS52YWx1ZX1gKS5qb2luKFwiOyBcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgYWZ0ZXJSZXNwb25zZTogW1xuICAgICAgICAocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShyZXNwb25zZS5oZWFkZXJzW1wic2V0LWNvb2tpZVwiXSkpIHtcbiAgICAgICAgICAgIHJlc3BvbnNlLmhlYWRlcnNbXCJzZXQtY29va2llXCJdLmZvckVhY2goKGMpID0+IHtcbiAgICAgICAgICAgICAgY29va2llSmFyLnNldENvb2tpZShuZXcgVVJMKHJlc3BvbnNlLnVybCksIGMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH1cbiAgfTtcbiAgaWYgKGJvZHkpIHtcbiAgICBpZiAoYm9keSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgIHJlcXVlc3QuYm9keSA9IEJ1ZmZlci5mcm9tKGJvZHkpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXF1ZXN0LmJvZHkgPSBCdWZmZXIuZnJvbShKU09OLnN0cmluZ2lmeShib2R5KSk7XG4gICAgfVxuICB9XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBnb3QocmVxdWVzdCk7XG4gICAgcmV0dXJuIHBhcnNlUmVzcG9uc2UocmVzcG9uc2UpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnN0IGdvdEVycm9yID0gZXJyb3I7XG4gICAgaWYgKGdvdEVycm9yLnJlc3BvbnNlKSB7XG4gICAgICByZXR1cm4gcGFyc2VSZXNwb25zZShnb3RFcnJvci5yZXNwb25zZSk7XG4gICAgfVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5mdW5jdGlvbiBwYXJzZVJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gIHJldHVybiB7XG4gICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXNDb2RlLFxuICAgIHN0YXR1c1RleHQ6IHJlc3BvbnNlLnN0YXR1c01lc3NhZ2UgfHwgXCJcIixcbiAgICBkYXRhOiByZXNwb25zZS5ib2R5LFxuICAgIGNvbmZpZzogcmVzcG9uc2UucmVxdWVzdC5vcHRpb25zLFxuICAgIHJlcXVlc3Q6IHJlc3BvbnNlLnJlcXVlc3QsXG4gICAgcmVzcG9uc2UsXG4gICAgaGVhZGVyczogcmVzcG9uc2UuaGVhZGVyc1xuICB9O1xufVxuZnVuY3Rpb24gY29udmVydEJpZ0ludFRvU3RyaW5nKG9iaikge1xuICBjb25zdCByZXN1bHQgPSB7fTtcbiAgaWYgKCFvYmopXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgT2JqZWN0LmVudHJpZXMob2JqKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJiaWdpbnRcIikge1xuICAgICAgICByZXN1bHRba2V5XSA9IFN0cmluZyh2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHRba2V5XSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnQge1xuICBhcHRvc0NsaWVudCBhcyBkZWZhdWx0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubm9kZS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@aptos-labs/aptos-client/dist/node/index.node.mjs\n");

/***/ })

};
;